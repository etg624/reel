{"version":3,"sources":["actions/search.js","actions/toggleStatus.js","actions/sortBy.js","components/PauseButton.js","components/ProgressBar.js","components/ItemCard.js","components/SortBy.js","components/SearchBar.js","components/SearchableInventory.js","components/Table.js","App.js","reducers/inventoryReducer.js","store.js","serviceWorker.js","index.js"],"names":["SEARCH","TOGGLE_STATUS","toggleStatus","status","id","type","SORT_BY","sortBy","value","connect","props","dispatch","itemId","react_default","a","createElement","className","onClick","ProgressBar","fill","color","style","width","concat","backgroundColor","ItemCard","name","percentSaved","total","imageUrl","src","alt","Math","abs","floor","percentHandler","components_ProgressBar","components_PauseButton","radioButtons","sortValues","map","key","replace","str","toUpperCase","onChange","e","target","handleRadioChange","SearchBar","searchVal","placeholder","SearchableInventory","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeHandler","bind","assertThisInitialized","_this$props","filteredItems","inventoryItems","filter","item","toLowerCase","includes","components_ItemCard","components_SearchBar","components_SortBy","length","role","aria-label","Component","_ref","inventoryReducer","Table","components_SearchableInventory","App","components_Table","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","state","arguments","undefined","action","objectSpread","toConsumableArray","sort","b","Boolean","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99ee05a2.chunk.js","sourcesContent":["export const SEARCH = 'SEARCH';\nexport const search = value => ({\n  type: SEARCH,\n  value\n});\n","export const TOGGLE_STATUS = 'TOGGLE_STATUS';\nexport const toggleStatus = (status, id) => {\n  return {\n    type: TOGGLE_STATUS,\n    status,\n    id\n  };\n};\n","export const SORT_BY = 'SORT_ BY';\nexport const sortBy = value => ({\n  type: SORT_BY,\n  value\n});\n","import React from 'react';\nimport { toggleStatus } from '../actions';\nimport { connect } from 'react-redux';\nimport '../styles/PauseButton.css';\n\nfunction PauseButton(props) {\n  const { dispatch, status, itemId } = props;\n  return (\n    <button\n      className=\"pause-button\"\n      onClick={() => dispatch(toggleStatus(status, itemId))}\n    >\n      {status === 'active'\n        ? 'Pause your saving progress'\n        : 'Resume Saving for this product'}\n    </button>\n  );\n}\n\nexport default connect()(PauseButton);\n","import React from 'react';\nimport '../styles/ProgressBar.css';\n\nfunction ProgressBar(props) {\n  const { fill } = props;\n  const color =\n    fill > 75\n      ? '#86e01e'\n      : fill > 50\n      ? '#f2d31b'\n      : fill > 25\n      ? '#f2b01e'\n      : '#f63a0f';\n  return (\n    <div className=\"progress\">\n      <div\n        className=\"progress-bar\"\n        style={{ width: `${fill}%`, backgroundColor: color }}\n      />\n    </div>\n  );\n}\n\nexport default ProgressBar;\n","import React from 'react';\nimport PauseButton from './PauseButton';\nimport ProgressBar from './ProgressBar';\nimport '../styles/ItemCard.css';\n\nfunction percentHandler(total, percentSaved) {\n  return Math.abs(Math.floor(total * (percentSaved * 0.01) - total));\n}\n\nfunction ItemCard(props) {\n  const { name, status, percentSaved, total, imageUrl, id } = props;\n  return (\n    <main className=\"item-container\">\n      <section className=\"item-image-container\">\n        <img src={imageUrl} alt={name} />\n      </section>\n      <section className=\"item-info\">\n        <p className=\"bold name\">{name}</p>\n        <p className=\"total-price\">Total price: ${total}</p>\n        <p className=\"item-owe\">\n          You only owe{' '}\n          <span className=\"bold\">${percentHandler(total, percentSaved)}</span>{' '}\n          more!\n        </p>\n        <ProgressBar fill={percentSaved} />\n      </section>\n      <aside className=\"status\">\n        <p className={`item-status bold ${status}`}>{status}</p>\n\n        <PauseButton status={status} itemId={id} />\n      </aside>\n    </main>\n  );\n}\n\nexport default ItemCard;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { sortBy } from '../actions';\nimport '../styles/SortBy.css';\n\nfunction SortBy(props) {\n  const { dispatch, sortValues } = props;\n  function handleRadioChange(e) {\n    dispatch(sortBy(e.target.value));\n  }\n  const radioButtons = sortValues.map(value => {\n    return (\n      <li key={value}>\n        <div>\n          <label>\n            {// insert a space before all caps\n            value\n              .replace(/([A-Z])/g, ' $1')\n              // uppercase the first character\n              .replace(/^./, function(str) {\n                return str.toUpperCase();\n              })}\n          </label>\n          <input\n            type=\"radio\"\n            value={value}\n            name=\"sortBy\"\n            onChange={e => handleRadioChange(e)}\n          />\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"sort-container\">\n      <span className=\"bold sort-by-text\">Sort By:</span>\n      <ul className=\"sort-buttons\">{radioButtons}</ul>\n    </div>\n  );\n}\n\nexport default connect()(SortBy);\n","import React from 'react';\n\nfunction SearchBar(props) {\n  return (\n    <input\n      className=\"search\"\n      type=\"text\"\n      value={props.searchVal}\n      onChange={props.onChange}\n      placeholder=\"Search for an item...\"\n    />\n  );\n}\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ItemCard from './ItemCard';\nimport { search } from '../actions';\nimport SortBy from './SortBy';\nimport SearchBar from './SearchBar';\nimport '../styles/SearchableInventory.css';\n\nclass SearchableInventory extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n  }\n\n  onChangeHandler(e) {\n    this.props.dispatch(search(e.target.value));\n  }\n  render() {\n    const { searchVal, inventoryItems } = this.props;\n\n    const filteredItems = inventoryItems\n      .filter(item => {\n        if (searchVal) {\n          return item.name.toLowerCase().includes(searchVal.toLowerCase());\n        } else {\n          return item;\n        }\n      })\n      .map(item => {\n        const { name, status, percentSaved, total, imageUrl, id } = item;\n        return (\n          <li key={id}>\n            <ItemCard\n              name={name}\n              status={status}\n              percentSaved={percentSaved}\n              total={total}\n              imageUrl={imageUrl}\n              id={id}\n            />\n          </li>\n        );\n      });\n    return (\n      <section className=\"page-content\">\n        <SearchBar onChange={this.onChangeHandler} searchVal={searchVal} />\n        <section className=\"reels\">\n          <header className=\"reels-header\">\n            <h1>Your Reels!</h1>\n            <SortBy\n              className=\"sort-by\"\n              sortValues={['status', 'name', 'percentSaved', 'total']}\n            />\n          </header>\n\n          <ul>\n            {filteredItems.length ? (\n              filteredItems\n            ) : (\n              <div className=\"no-item\">\n                No items match that search{' '}\n                <span role=\"img\" aria-label=\"detective\">\n                  🕵️‍♂️\n                </span>\n              </div>\n            )}\n          </ul>\n        </section>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({ inventoryReducer }) => ({\n  inventoryItems: inventoryReducer.inventoryItems,\n  searchVal: inventoryReducer.searchVal\n});\n\nexport default connect(mapStateToProps)(SearchableInventory);\n","import React from 'react';\n\nimport SearchAbleInventory from './SearchableInventory';\n\nfunction Table() {\n  return (\n    <div>\n      <SearchAbleInventory />\n    </div>\n  );\n}\n\nexport default Table;\n","import React from 'react';\nimport Table from './components/Table';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import { TOGGLE_STATUS, SEARCH, SORT_BY } from '../actions';\nconst initialState = {\n  inventoryItems: [\n    {\n      id: 1,\n      name: 'Rolex Watch',\n      status: 'active',\n      percentSaved: '30',\n      total: 35000,\n      imageUrl:\n        'https://images.rolex.com/2019/catalogue/images/upright-bba-with-shadow/m116503-0004.png?impolicy=upright-grid-card&imwidth=585'\n    },\n    {\n      id: 2,\n      name: 'Gucci Belt',\n      status: 'paused',\n      percentSaved: '90',\n      total: 400,\n      imageUrl:\n        'https://cdn.cliqueinc.com/cache/posts/254060/how-to-tell-if-a-gucci-belt-is-real-254060-1523045002688-product.700x0c.jpg'\n    },\n    {\n      id: 3,\n      name: 'Versace Shirt',\n      status: 'active',\n      percentSaved: '40',\n      total: 412,\n      imageUrl:\n        'https://image.shopittome.com/apparel_images/fb/versace-versace-shirt-abvba097ce8_zoom.jpg'\n    },\n    {\n      id: 4,\n      name: 'Off-White Shirt',\n      status: 'paused',\n      percentSaved: '90',\n      total: 200,\n      imageUrl: 'https://is4.revolveassets.com/images/p4/n/z/OFFF-MS76_V1.jpg'\n    }\n  ],\n  searchVal: ''\n};\n\nexport function inventoryReducer(state = initialState, action) {\n  switch (action.type) {\n    case TOGGLE_STATUS:\n      return {\n        ...state,\n        inventoryItems: state.inventoryItems.map(item => {\n          if (action.id !== item.id) {\n            return item;\n          }\n          return {\n            ...item,\n            status: action.status === 'active' ? 'paused' : 'active'\n          };\n        })\n      };\n    case SEARCH:\n      return {\n        ...state,\n        searchVal: action.value\n      };\n    case SORT_BY:\n      const { value } = action;\n\n      return {\n        ...state,\n        inventoryItems: [\n          ...state.inventoryItems.sort((a, b) => {\n            return b[value] < a[value] ? 0 : a ? -1 : 1;\n          })\n        ]\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore, compose, combineReducers } from 'redux';\nimport { inventoryReducer } from './reducers/inventoryReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  combineReducers({\n    inventoryReducer\n  }),\n  composeEnhancers()\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}